<!doctype html>
<html lang="en">

  <%- include('../part/head') %>

  <body>
    <%- include('../part/nav') %>
      <div id="background"></div>
      <div class="container">
        <div class="col col-md-6 col-xs-12">
          <h2>Đăng ký</h2>
      
          <div class="form-group">
            <label for="name">Tên hiển thị</label>
            <input type="text" class="form-control" id="name" name="name" placeholder="Nhập tên hiển thị">
            <label for="email">Email</label>
            <input type="email" class="form-control" id="email" name="email" placeholder="Email">
            <label for="password">Mật khẩu</label>
            <input type="password" class="form-control" id="password" name="password" placeholder="******">
          </div>
      
          <p></p>
          
          <div class="form-group">
            <a type="submit" onclick="register()" class="fantasy-btn">Đăng ký</a>
            <a href="/login" class="fantasy-btn">Quay lại</a>
          </div>
          <p id="message"></p>
        </div>
      </div>
  </body>

  <%- include('../part/foot') %>

  <script>
    function showMessage(message) {
      document.getElementById("message").innerText = message;  
    }

    function register() {
      // Get fields
      let name = document.getElementById('name').value;
      let email = document.getElementById('email').value;
      let password = document.getElementById('password').value;

      // Validate fields
      if (name == "" || email == "" || password == "" || !validateEmail(email)) {
        alert("Vui lòng điền thông tin hợp lệ");
        return;
      }

      // Register 
      firebase.auth().createUserWithEmailAndPassword(email, password)
        .then((userCredential)=>{
          var user = userCredential.user;
          user.updateProfile({
            displayName: name,
          }).then(()=>{
            showMessage("Đăng ký thành công");

            // POST to server
            user.getIdToken()
              .then((idToken) => {
                fetch('/login', {
                  method: 'POST',
                  headers: {
                    'Content-Type': 'application/json',
                    "CSRF-Token": Cookies.get("XSRF-TOKEN"),
                  },
                  body: JSON.stringify({idToken})
                }).then(resp => resp.json())
                  .then(data => {
                    if (data.code == "OK") {
                      window.location = '/myaccount';
                    }
                  });
              });
          }), 
          ((error) => {
            showMessage(error.message);
          });

          setIdForUser(user);

        })
        .catch(function(error) {
          var errorCode = error.code;
          var errorMessage = error.message;
          if (errorCode == 'auth/weak-password') {
            showMessage(errorMessage);
          } else {
            showMessage(errorMessage);
          }
          console.log(error);
        });


      // Input change event
      const inputElms = document.querySelectorAll("input")
      inputElms.forEach((elm)=>{
        elm.addEventListener('input', (event) => {
          showMessage("");
        });
      });
    }
  </script>

</html>