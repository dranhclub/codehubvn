<!doctype html>
<html lang="en">

    <%- include('../part/head') %>

    <body>
        <%- include('../part/nav') %>
            <div id="background"></div>
            <div class="container">
                <div class="row">
                    <div class="col-xs-12 col-md-6">
                        <h3>Thông tin cơ bản</h3>
                        <div class="form-group">
                            <label for="id">ID</label>
                            <input type="text" id="id" class="form-control" disabled value="<%= user.id %>">
                            <label for="name">Tên</label>
                            <input type="text" name="name" id="name" class="form-control" value="<%= user.displayName %>">
                            <label for="email">Email</label>
                            <input type="email" name="email" id="email" class="form-control" value="<%= user.email %>" disabled>
                            <% if (!user.emailVerified) { %>
                                <p>
                                    Email chưa xác thực.
                                    <a href="/checkemail">Xác thực email</a>
                                </p>
                            <% } %>    
                        </div>

                        <hr>
                        <h3>Ảnh đại diện</h3>
                        <div class="d-flex flex-column">
                            <% if (user.photoURL) { %>
                                <img src="<%=user.photoURL%>" id="avatar" width="200" height="200" alt="default avatar" class="img-thumbnail">
                            <% } else { %>
                                <img src="/images/df-avt.png" id="avatar" width="200" height="200" alt="default avatar" class="img-thumbnail">
                            <% } %>
                            <input type="file" accept="image/*" id="file-button" >
                        </div>

                        <p></p>
                        <div>
                            <a href="#" onclick="saveChange()" class="fantasy-btn">Lưu thay đổi</a>
                        </div>

                        <hr>
                        <h3>Đổi mật khẩu</h3>
                        <div class="form-group">
                            <label for="old-password">Mật khẩu cũ</label>
                            <input type="text" class="form-control" id="old-password">
                            <label for="new-password">Mật khẩu mới</label>
                            <input type="text" class="form-control" id="new-password">
                            <a href="#" onclick="changePassword()" class="fantasy-btn">Đổi mật khẩu</a>
                        </div>

                        <hr>
                        <a href="/logout" onclick="firebase.auth().signOut()" class="fantasy-btn">Đăng xuất</a>
                    </div>

                    <div class="col-xs-12 col-md-6">
                        <h3>Lịch sử trả lời</h3>
                        <div>
                            <h4>Mức thường</h4>
                            <strong>Số câu hỏi đã trả lời: <%=user.current.normal%> / <%= questionMetadata.questionOrder.normal.length %> </strong>
                            <% if (user.current.normal > 0) { %>
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>Câu số</th>
                                        <th>Thời gian trả lời</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }; %>
                                    <% user.answer.normal.forEach((timestamp, index) => { %>
                                        <tr>
                                            <td><%= index + 1 %></td>
                                            <td><%= new Date(timestamp).toLocaleTimeString('vi-VI', options) %></td>
                                        </tr>
                                        <% }); %>
                                </tbody>
                            </table>
                            <% } %>
                        </div>
                        <hr>
                        <div>
                            <h4>Mức khó</h4>
                            <strong>Số câu hỏi đã trả lời: <%=user.current.hard%> / <%= questionMetadata.questionOrder.hard.length %> </strong>
                            <% if (user.current.hard > 0) { %>
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>Câu số</th>
                                        <th>Thời gian trả lời</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }; %>
                                    <% user.answer.hard.forEach((timestamp, index) => { %>
                                        <tr>
                                            <td><%= index + 1 %></td>
                                            <td><%= new Date(timestamp).toLocaleTimeString('vi-VI', options) %></td>
                                        </tr>
                                        <% }); %>
                                </tbody>
                            </table>
                            <% } %>
                        </div>
                    </div>
                </div>
            </div>
    </body>

<%- include('../part/foot') %>

<script>
    function changePassword() {
        let oldPassword = document.getElementById("old-password").value;
        let newPassword = document.getElementById("old-password").value;
        let email = `<%= user.email %>`;

        fetch('/change-password', {
            method: 'POST',
            headers: {
                "Content-Type": "application/json",
                "CSRF-Token": Cookies.get("XSRF-TOKEN")
            },
            body: JSON.stringify({oldPassword, newPassword})
        })
        .then(resp => resp.json())
        .then(data => {
            if (data.code == "OK") {
                alert("Đổi  mật khẩu thành công");
                firebase.auth().signInWithEmailAndPassword(email, newPassword)
                    .then((userCredential) => {
                        user = userCredential.user;
                        user.getIdToken().then(idToken => {
                            fetch('/login', {
                                method: 'POST',
                                headers: {
                                    'Content-Type' : 'application/json',
                                    "CSRF-Token": Cookies.get("XSRF-TOKEN"),
                                },
                                body: JSON.stringify({idToken})
                            }).then(resp => resp.json())
                            .then(data => {
                                if (data.code == "OK") {
                                    window.location = '/myaccount';
                                }
                            });
                        });
                    })
            } else if (data.code == "WRONG_PASSWORD") {
                alert("Mật khẩu cũ không đúng");
            } else {
                alert(JSON.stringify(data));
            }
        });
    }

    let currentUser = null;

    firebase.auth().onAuthStateChanged(user => {
        if (user) {
            currentUser = user;
        }
    });

    function uploadFile(file) {
        var metadata = {
            contentType: 'image/jpeg',
        };

        var rootRef = firebase.storage().ref();
        var uploadFileRef = rootRef.child(`images/${currentUser.email}`)

        var uploadTask = uploadFileRef.put(file, metadata);

        // Listen for state changes, errors, and completion of the upload.
        uploadTask.on(
            firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'
            function(snapshot) {
                // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded
                var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;
                console.log('Upload is ' + progress + '% done');
                switch (snapshot.state) {
                    case firebase.storage.TaskState.PAUSED: // or 'paused'
                        console.log('Upload is paused');
                        break;
                    case firebase.storage.TaskState.RUNNING: // or 'running'
                        console.log('Upload is running');
                        break;
                }
            },
            function(error) {
                // Errors list: https://firebase.google.com/docs/storage/web/handle-errors
                console.log(console.log(error));
                switch (error.code) {
                    case 'storage/unauthorized':
                        // User doesn't have permission to access the object
                        break;

                    case 'storage/canceled':
                        // User canceled the upload
                        break;

                    case 'storage/unknown':
                        // Unknown error occurred, inspect error.serverResponse
                        break;
                }
            },
            function() {
                // Upload completed successfully, now we can get the download URL

                uploadTask.snapshot.ref.getDownloadURL().then(function(downloadURL) {
                    console.log('File available at', downloadURL);
                    var _img = document.getElementById('avatar');
                    var newImg = new Image;
                    newImg.onload = function() {
                        _img.src = this.src;
                    }
                    newImg.src = downloadURL;

                });

            }
        );
    }

    document.getElementById("file-button").addEventListener('change', e => {
        uploadFile(e.target.files[0]);
    });

    function saveChange() {
        let name = document.getElementById('name').value;
        let imgUrl = document.getElementById('avatar').src;

        currentUser.updateProfile({
            displayName: name,
            photoURL: imgUrl
        }).then(() => {
            alert('Đã lưu thay đổi');
        }).catch((error) => {
            alert(error.message);
            console.log(error);
        });
    }
</script>

</html>